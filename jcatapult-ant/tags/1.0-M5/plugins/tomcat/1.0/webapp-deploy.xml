<?xml version="1.0" encoding="UTF-8"?>

<!--
   Copyright (c) 2001-2007, Inversoft, All Rights Reserved

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
   either express or implied. See the License for the specific
   language governing permissions and limitations under the License.
-->
<project name="webapp-deploy">
  <dirname property="deploy.dir" file="${ant.file.webapp-deploy}"/>
  <import file="${deploy.dir}/base-deploy.xml"/>

  <target name="-deploy-local-init"/>

  <target name="deploy-local" description="Deploys the application locally" depends="-deploy-local-init">
    <deploy_local_pre/>
    <copy-config todir="${dir.target.tomcat}" webdir="${dir.web}"/>

    <!--
      This is a workaround for Tomcat sucking. Tomcat can't have a context.xml in the root of the
      conf dir because it then assumes that context-path is the directory name that the web app is
      running from. In our cases this would then always be /web, which sucks. So, instead I fake
      out Tomcat to think that there is only a single web application, the default installed by
      copying the context.xml file into the Engine/Host directory and calling it ROOT, which
      tomcat assumes is the default webapp.
    -->
    <copy file="deploy/tomcat/main/conf/context.xml" tofile="target/tomcat/conf/Catalina/localhost/ROOT.xml">
      <filterset>
        <filter token="USERNAME" value="${db.username}"/>
        <filter token="PASSWORD" value="${db.password}"/>
      </filterset>
    </copy>
    <deploy_local_post/>
  </target>
</project>
