#summary Getting start using JCatapult
#labels Featured

= Introduction =

This document describes how to get up and running with JCatapult.

= Java =

JCatapult requires Java version 6 (1.6) to use. You can download that from Sun's Java website at http://java.sun.com or use the standard method for your operating system. For example, OS X provides Java 6 downloads from the developer site and Linux has most JDKs in their repositories (via apt or yum).

= JCatapult Distribution Installation =
  * Download the most current version of the JCatapult Distribution from the [http://code.google.com/p/jcatapult/downloads/list Downloads] page.

  * Unzip the distribution to a directory of your choice (e.g. /usr/share/jcatapult, C:\Program Files\jcatapult)

  * Create a JCATAPULT_HOME environment variable and set it to the directory you unzipped the distribution to.

= Ant =

JCatapult requires that you are using Apache Ant 1.7.0 or later. You will need to download Apache Ant if you don't already have it installed. The website for Ant is http://ant.apache.org.

After you download and install Ant, please create an ANT_HOME environment variable and set it to the location of your Ant installation.

= Tomcat =

== Installation ==
Currently, JCatapult requires the use of Tomcat 5.5 (Tomcat 6.0 will not work with JCatapult yet) for running applications in development. This will change in the future to support Jetty and many other application servers. For now, though, you will need to download Apache Tomcat from http://tomcat.apache.org. Tomcat requires that you configure the CATALINA_HOME environment variable to point to the Tomcat installation directory.

*NOTE FOR WINDOWS USERS:* JCatapult requires that you install Tomcat using the non-service based installation. Running Tomcat as a Windows service will not work with JCatapult. You must use the ZIP file installation of Tomcat to work with JCatapult.

== SSL Configuration ==
JCatapult assumes your webapp will require the use of SSL and as a result sets the 8443 connector by default in the JCatault Ant Tomcat-plugin server.xml file.  You must run the java keytool app in your user home to create the .keystore file if you haven't yet done so.  Refer to the tomcat [http://tomcat.apache.org/tomcat-5.5-doc/ssl-howto.html SSL Configuration HOW-TO] to create your .keystore file successfully.

If your webapp does not require an SSL connection, then you can override the default server.xml by providing your own in your project without the 8443 connector and implementing the tomcat plugin's deploy_local_post macrodef inside your project's build.xml.  An example implementation has been provided below and assumes you will be overriding the default server.xml with one in your project located at deploy/tomcat/main/conf/server.xml

{{{
<macrodef name="deploy_local_post">
    <sequential>
      <copy file="deploy/tomcat/main/conf/server.xml" todir="${dir.target.tomcat}/conf" overwrite="true"/>
    </sequential>
</macrodef>
}}}

Make sure you provide this implementation after the tomcat plugin import.


= MySQL = 

== Installation ==

Currently, JCatapult requires the use of MySQL for projects that use a database. It's currently in the works to extend this capability to PostgreSQL and more databases will be added soon. For now, you'll need to download and install MySQL Community or Server version 5 or later from http://www.mysql.com.  It's highly recommended that you use InnoDB for all table schemas but JCatapult supports MyISAM as well.

== Setup and Configuration ==

=== Port ===

JCatapult's databasing capabilities currently only work with MySQL's default port setting of 3306.  We recognize that some systems might already have databases configured on this port and, therefore, plan on adding support to configure this setting in the future.

=== Environment ===

It's highly recommended to create an environment variable that references the MySQL home directory and adding the mysql home bin directory to your path.  This is optional and not a requirement for JCatapult to function properly but this will make it much easier for you to run the MySQL client from the command line.

=== MySQL Connector Driver ===
Because JCatapult uses JNDI to connect to MySQL and this JNDI entry is defined in Tomcat's context.xml, you must place the MySQL connector driver in the the tomcat installation's `common/lib` directory.  Because the version of this driver changes periodically, we recommend that you download the most current version from here -> [http://dev.mysql.com/downloads/connector/j/5.0.html]

= The build.properties file =

== JDK 1.6 Configuration ==

JCatapult requires a file named build.properties to be created inside your user home directory. This file points JCatapult to the location of the JDK for the project. This allows the project to clearly define which JDK it is using (which might be different for other applications) and the JDK used to run the JCatapult Ant build system. This file should contain entries for each of the JDKs you plan to use. Here is an example:

*Linux/Unix version*
{{{
jdk1.6=/usr/lib/jvm/java-6-sun
jdk1.5=/usr/lib/jvm/java-1.5.0-sun
}}}

*Windows version*
{{{
jdk1.6=C:\\Program Files\\Java\\jdk1.6.0_03
jdk1.5=C:\\Program Files\\Java\\jdk1.5.0_12
}}}

*Mac version*
{{{
jdk1.6=/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home
jdk1.5=/System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Home
}}}

By default, JCatapult uses JDK 6 and therefore we suggest downloading, installing and configuring JCatapult to use that JDK.

== Database Credential Configuration ==

In order to successfully create databases for JCatapult projects, JCatapult requires that 2 properties be defined:

  * db.username
  * db.password

Whichever username and password you choose is arbitrary but we recommend that you use the same username as your user home account (using the same username as your home account will make it much easier to access mysql from the shell).

Example:  Lets pretend that your user account is 'userX':

Linux:
{{{
/home/userX
}}}

Mac:
{{{
/Users/userX
}}}

Windows:
{{{
C:\Documents and Settings\userX
}}}

Within your home directory's build.properties file, you'd define db.username and db.password as follows:

{{{
db.username=userX
db.password=
}}}

The last step is to add 'userX' with password empty string to your mysql database (if they do not yet exist).  Use the following mysql documentation to help you with adding your new user credentials to your mysql datbase [http://dev.mysql.com/doc/refman/5.0/en/adding-users.html Adding New User Accounts to MySQL]

NOTE:  You'll notice that no password (empty string) was specified for our example 'userX'.  Inconjunction with setting your username equal to your user home account, providing empty string as your password will expedite accessing the mysql client from the command line.  Once your user is added, you'll only have to type 'mysql' to access your mysql client rather than having to provide both the username and password. 


= Junction =

*Windows users only*

JCatapult makes use of the Windows _junction point_ support. Windows _junction points_ are identical to Unix/Linux symbolic links. In order to make full use of JCatapult you must install the _junction_ executable. To install _junction_ download the installer from Microsoft at:

http://www.microsoft.com/technet/sysinternals/FileAndDisk/Junction.mspx

Run the installer and you should be all setup to use _junction points_ within JCatapult.