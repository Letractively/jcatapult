= JCatapult Deployment Manager =

As of 1.0-RC2, JCatapult ships with the JCatapult Deployment Manager (`deployer` for short), which is a deployment framework that uses Apache Commons Configuration, Java Secure CHannel (JSCH), and Groovy to provide an easy way to deploy webapps to remote servers.

To understand the deployer better, there are 2 main concepts that you should be familiar with:

  * domain
  * environment

= Domain =
The domain is intended to represent a server or group of servers where there are one or more environments that you host your webservers from.

= Setup =

(This document assumes you have completed the instructions in the GettingStarted document.)

The deployer comes with a Linux/Unix/Mac shell script and a Windows batch file that provides the capability to invoke the tool from the command-line. In order to use the tool, the deployer must be correctly installed and the executable must be in your path or must be executed using the fully-qualified location to the executable. The deployer installation is part of the JCatapult distribution and is located in the _JCATAPULT_HOME/deployer_ directory. If you would like to add the deployer to your path, append this to your PATH environment variable:

*Windows*
{{{
%JCATAPULT_HOME%\deployer\bin
}}}

*Linux/Unix*
{{{
$JCATAPULT_HOME/deployer/bin
}}}

= Invoking =

To invoke the deployer, simply type:

{{{
deploy help
}}}

This command will tell the deployer to display the help screen.

Both the batch and shell scripts assume that you are executing them from within your jcatapult project root directory.  If you do not execute them from within your jcatapult project root, then you will be prompted by an error screen informing you of such.

= Configuration =
The deployer is configured via an xml file and, by convention, script execution expects the path of this configuration file to be relative to the project root at the following location:

{{{
deploy/remote/deploy.xml
}}}

An example deploy xml configuration file is included below:

{{{
<?xml version="1.0" encoding="UTF-8"?>
<deployment-properties>
  <deploy domain="domain1">
    <environment type="staging">
      <host>staging.jcatapult.org</host>
      <host-username>staging.host.username</host-username>
      <host-password>staging.host.password</host-password>
      <db-name>staging.db.name</db-name>
      <db-username>staging.db.username</db-username>
      <db-password>staging.db.password</db-password>
    </environment>
  </deploy>
  <deploy domain="domain2">
    <environment type="qa">
      <host>qa.jcatapult.org</host>
      <host-username>qa.host.username</host-username>
      <host-password>qa.host.password</host-password>
      <db-name>qa.db.name</db-name>
      <db-username>qa.db.username</db-username>
      <db-password>qa.db.password</db-password>
    </environment>
    <environment type="prod">
      <host>prod.jcatapult.org</host>
      <host-username>prod.host.username</host-username>
      <host-password>prod.host.password</host-password>
      <db-name>prod.db.name</db-name>
      <db-username>prod.db.username</db-username>
      <db-password>prod.db.password</db-password>
    </environment>
  </deploy>
</deployment-properties>
}}}

The configuration schema is defined by one or more `deploy` descriptors and each deploy descriptor contains one or more `environment` descriptors.

== Deploy Descriptor ==
The overarching concept behind the scaffolder is to deploy 

= Interactive =

The deployer tool is highly interactive in that it provides tab completion for ease of use. 

= Domain =

= Environment =