#summary JCatapult project layout

= Project types =

JCatapult projects fall into three types:

  * Web applications
  * Components
  * Libraries

Each project type has different project layouts and those layouts are as follows:

= Web applications =

Here is the web application project layout

{{{
deploy                           <- J2EE container deployment files
 |- tomcat
 |   |- main                     
 |   |   |- conf  
 |   |   |   |- context.xml      <- The Tomcat context configuration file for development
 |
src
 |- java
 |   |- main                     <- Main Java source files
 |   |   |- org  
 |   |   |   |- ...
 |   |
 |   |- test
 |   |   |- unit                 <- Unit tests
 |   |   |   |- org
 |   |   |   |   |- ...
 |   |   |
 |   |   |- integration          <- Integration tests
 |   |   |   |- org
 |   |   |   |   |- ...
 |
 |- conf
 |   |- main                     <- Main configuration
 |   |   |- META-INF
 |   |   |   |- persistence.xml  <- JPA configuration file
 |   |
 |   |- test
 |   |   |- unit                 <- Unit test configuration
 |   |   |   |- ...
 |   |   |
 |   |   |- integration          <- Integration test configuration
 |   |   |   |- ...
 |
web                              <- Web resources
 |- WEB-INF
 |   |- ...
}}}

*NOTE:* Since JCatapult supports inline web applications so that JSPs and other web resources can be modified without requiring a re-compile or copy step to reload, the web directory is the location that the web application is run from during development. The standard web directories of __WEB-INF/classes__ and __WEB-INF/lib__ are therefore cleaned out by the JCatapult Ant J2EE clean target. In addition, these directories should not be part of source control.

= Libraries =

Here is the library project layout

{{{
src
 |- java
 |   |- main                     <- Main Java source files
 |   |   |- org  
 |   |   |   |- ...
 |   |
 |   |- test
 |   |   |- unit                 <- Unit tests
 |   |   |   |- org
 |   |   |   |   |- ...
 |   |   |
 |   |   |- integration          <- Integration tests
 |   |   |   |- org
 |   |   |   |   |- ...
 |
 |- conf
 |   |- main                     <- Main configuration
 |   |   |- META-INF
 |   |   |   |- persistence.xml  <- JPA configuration file
 |   |
 |   |- test
 |   |   |- unit                 <- Unit test configuration
 |   |   |   |- ...
 |   |   |
 |   |   |- integration          <- Integration test configuration
 |   |   |   |- ...
 |
}}}

= Components =

Here is the component project layout

{{{
deploy                           <- J2EE container deployment files
 |- tomcat
 |   |- main                     
 |   |   |- conf  
 |   |   |   |- context.xml      <- The Tomcat context configuration file for development
 |
src
 |- java
 |   |- main                     <- Main Java source files
 |   |   |- org  
 |   |   |   |- ...
 |   |
 |   |- test
 |   |   |- unit                 <- Unit tests
 |   |   |   |- org
 |   |   |   |   |- ...
 |   |   |
 |   |   |- integration          <- Integration tests
 |   |   |   |- org
 |   |   |   |   |- ...
 |
 |- conf
 |   |- main                     <- Main configuration
 |   |   |- META-INF
 |   |   |   |- persistence.xml  <- JPA configuration file
 |   |
 |   |- test
 |   |   |- unit                 <- Unit test configuration
 |   |   |   |- ...
 |   |   |
 |   |   |- integration          <- Integration test configuration
 |   |   |   |- ...
 |
web                              <- Web resources
 |- WEB-INF
 |   |- ...
}}}

*NOTE:* Since JCatapult supports inline web applications so that JSPs and other web resources can be modified without requiring a re-compile or copy step to reload, the web directory is the location that the web application is run from during development. The standard web directories of __WEB-INF/classes__ and __WEB-INF/lib__ are therefore cleaned out by the JCatapult Ant J2EE clean target. In addition, these directories should not be part of source control.