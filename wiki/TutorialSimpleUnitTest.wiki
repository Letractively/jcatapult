#summary A tutorial that guides you through creating a simple unit test.

= Introduction =

Let's create a simple unit test for a class named Calculator. Here is the Calculator class:

_src/java/main/org/jcatapult/example/Calculator.java_
{{{
package org.jcatapult.example;

public class Calculator {
    private int one;
    private int two;

    public Calculator(int one, int two) {
        this.one = one;
        this.two = two;
    }

    public int add() {
        return one + two;
    }
}
}}}

First, we create the unit test in the _src/java/test/unit_ directory in the same package as the Calculator class. The test class must be named _CalculatorTest_ in order for JCatapult to find it. Here is our test class:

{{{
package org.jcatapult.example;

import static org.junit.Assert.*;
import org.junit.Test;

public class CalculatorTest {
    @Test
    public void testAdd() {
        Calculator calc = new Calculator(2, 2);
        assertEquals(4, calc.add());
    }
}
}}}

This test verifies that the _add_ method on the _Calculator_ class works correctly. Next, we run the test from the command line using the _test_ target from the [AntJunitPlugin JUnit plugin].

{{{
$ ant test
Buildfile: build.xml
[savantinit] Initializing Savant - reading project.xml file
[savantinit] Done initializing Savant - project is [jcatapult.org|jcatapult-doc-examples|1.0-RC1]

-test-init-params:

clean:

-compile-init-main:
    [mkdir] Created dir: /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/classes/main

-compile-main-conf:

compile-main:
    [javac] Compiling 1 source file to /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/classes/main

-compile-init-test-unit:
    [mkdir] Created dir: /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/classes/test/unit

-compile-test-unit-conf:

compile-test-unit:
    [javac] Compiling 1 source file to /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/classes/test/unit

-compile-init-test-integration:
    [mkdir] Created dir: /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/classes/test/integration

-compile-test-integration-conf:

compile-test-integration:
     [copy] Copied 3 empty directories to 2 empty directories under /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/classes/test/integration

compile:

jar:
    [mkdir] Created dir: /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/jars
      [jar] Building jar: /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/jars/jcatapult-doc-examples-1.0-RC1.jar
      [jar] Building jar: /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/jars/jcatapult-doc-examples-1.0-RC1-src.jar
  [publish] Published [jcatapult-doc-examples-1.0-RC1.jar] to [LocalCache at /home/bpontarelli/.savant_repository/jcatapult.org/jcatapult-doc-examples/jcatapult-doc-examples-1.0-RC1.jar]
  [publish] Published [jcatapult-doc-examples-1.0-RC1.jar.amd] to [LocalCache at /home/bpontarelli/.savant_repository/jcatapult.org/jcatapult-doc-examples/jcatapult-doc-examples-1.0-RC1.jar.amd]
  [publish] Published [jcatapult-doc-examples-1.0-RC1-src.jar] to [LocalCache at /home/bpontarelli/.savant_repository/jcatapult.org/jcatapult-doc-examples/jcatapult-doc-examples-1.0-RC1-src.jar]

-test-init:

test:
     [echo] Executing unit tests...
    [mkdir] Created dir: /home/bpontarelli/dev/os/jcatapult/jcatapult-doc-examples/target/report
    [junit] Running org.jcatapult.example.CalculatorTest
    [junit] Testsuite: org.jcatapult.example.CalculatorTest
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.168 sec
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 0.168 sec
    [junit] 
    [junit] Testcase: testAdd took 0.006 sec
     [echo] Executing integration tests...

BUILD SUCCESSFUL
Total time: 4 seconds
}}}

As you can see, JCatapult ran our test case and it as successful. This example is simplistic, but it illustrates how you can use JCatapult for unit testing.